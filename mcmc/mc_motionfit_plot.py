import matplotlib
matplotlib.use('TkAgg')
import matplotlib.pyplot as plt
import numpy as np
from mc_motionfit import cv,ca
import triangle

#Script to plot naive and mcmc-restricted quadratic fits to fomalhaut b's motion
#As generated by "mc_motionfit.py"


filename='fomalhaut_new.csv'

t=np.genfromtxt(filename, skip_header=1,delimiter=',', usecols=(9), unpack=True).T.ravel()
x = np.genfromtxt(filename, skip_header=1,delimiter=',',usecols=(11),unpack=True).T.ravel()/1000.
y = np.genfromtxt(filename, skip_header=1,delimiter=',',usecols=(13),unpack=True).T.ravel()/1000.
sig_x = np.genfromtxt(filename, skip_header=1,delimiter=',',usecols=(12),unpack=True).T.ravel()/1000.
sig_y = np.genfromtxt(filename, skip_header=1,delimiter=',',usecols=(14),unpack=True).T.ravel()/1000.

with np.load('fmh_acc_mcmc.npz') as d:
    ac=d['ac']
    af=d['af']
    lnp=d['lnp']
    chain=d['chain']
    
pmax=np.argmax(lnp)

x0=chain[:,:,0].flatten()
vx0=chain[:,:,1].flatten()
ax=chain[:,:,2].flatten()
y0=chain[:,:,3].flatten()
vy0=chain[:,:,4].flatten()
ay=chain[:,:,5].flatten()

x0ml=x0[pmax]
vx0ml=vx0[pmax]
axml=ax[pmax]
y0ml=y0[pmax]
vy0ml=vy0[pmax]
ayml=ay[pmax]

samples=chain[:,:,:].reshape(-1,6)
labels=['x0','vx0','ax','y0','vy0','ay']

fig=triangle.corner(samples,labels=labels,show_titles=True,plot_datapoints=False)

fig.subplots_adjust(hspace=0)
fig.subplots_adjust(wspace=0)

plt2=fig.add_subplot(3,3,3)

start=np.min(t)

times=np.linspace(start-365.2425*30,start+365.2425*30,2000)

rindex=np.floor(np.random.random(50)*np.size(x0))
for i in rindex:
    X=ca(times,x0[i],vx0[i],ax[i])
    Y=ca(times,y0[i],vy0[i],ay[i])
    plt.plot(times,X,'r:',linewidth=1,alpha=0.1)
    plt.plot(times,Y,'b:',linewidth=1,alpha=0.1)

X=ca(times,x0ml,vx0ml,axml)
Y=ca(times,y0ml,vy0ml,ayml)
    
plt.plot(times,X,'k',linewidth=1.5)
plt.plot(times,Y,'k',linewidth=1.5)


with np.load('fmh_simplefit.npz') as d:
    pvx=d['pvx']
    pvy=d['pvy']
    pax=d['pax']
    pay=d['pay']

plt.plot(times,cv(times,*pvx),'r-')
plt.plot(times,cv(times,*pvy),'b-')
plt.plot(times,ca(times,*pax),'r--')
plt.plot(times,ca(times,*pay),'b--')
    
plt.errorbar(t,x,yerr=sig_x,fmt='ro',ecolor='k',elinewidth=2,capthick=2,ms=2)
plt.plot(t,x,'ro',mew=1.5,label='X')
plt.legend(numpoints=1,markerscale=2)

plt.errorbar(t,y,yerr=sig_y,fmt='bo',ecolor='k',elinewidth=2,capthick=2,ms=2)
plt.plot(t,y,'bo',mew=1.5,label='Y')
plt.legend(numpoints=1,markerscale=2)


plt.show()